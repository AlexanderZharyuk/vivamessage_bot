from datetime import datetime

from textwrap import dedent

import requests

from more_itertools import chunked
from telegram import (Update, InlineKeyboardButton,
                      InlineKeyboardMarkup, ReplyKeyboardRemove,
                      ParseMode, ReplyKeyboardMarkup)
from telegram.ext import CallbackContext

from database_functions import get_user_phone_from_db


def generate_menu_with_links_message(
        update: Update,
        context: CallbackContext,
        api_url: str,
        api_guest_link_url: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å—Å—ã–ª–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """

    chat_id = update.message.chat_id
    username = update.message.from_user.name
    if update.message.contact:
        user_phone_number = update.message.contact.phone_number
    else:
        if not context.user_data.get("phone_number"):
            context.user_data["phone_number"] = get_user_phone_from_db(chat_id)
        user_phone_number = context.user_data["phone_number"]

    payload = {
        "phone": user_phone_number,
        "chat_id": chat_id,
        "username": username
    }
    response = requests.post(api_url, data=payload)
    response.raise_for_status()

    response_to_user = response.json()
    link_to_auth = response_to_user.get("login")
    message = dedent(f"""\
                üîó –í–æ—Ç –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç:
                <i>(–¥–µ–π—Å—Ç–≤—É–µ—Ç 5 –º–∏–Ω)</i>
                """)

    keyboard_buttons = [
        [InlineKeyboardButton(url=link_to_auth, text="–°—Å—ã–ª–∫–∞ –¥–ª—è –≤—Ö–æ–¥–∞")],
    ]

    if not response_to_user.get("login"):
        link_to_auth = response_to_user.get("register")

        response = requests.get(api_guest_link_url)
        response.raise_for_status()

        response_to_user = response.json()
        guest_link = response_to_user["url"]

        keyboard_buttons = [
            [
                InlineKeyboardButton(
                    url=link_to_auth,
                    text="C—Å—ã–ª–∫–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"
                )
            ],
            [
                InlineKeyboardButton(url=guest_link, text="–ì–æ—Å—Ç–µ–≤–∞—è —Å—Å—ã–ª–∫–∞")
            ],
        ]
        message = dedent(f"""\
                            üì± –ü–æ –≤–∞—à–µ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.

                            –ù–∏–∂–µ —É–∫–∞–∑–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ <b>—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é</b>
                            <i>(–¥–µ–π—Å—Ç–≤—É–µ—Ç 5 –º–∏–Ω)</i>
                            """)

    keyboard_buttons.append([InlineKeyboardButton(
        callback_data="back_to_menu",
        text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    )])

    markup = InlineKeyboardMarkup(
        inline_keyboard=keyboard_buttons,
        resize_keyboard=True
    )

    deleted_message = update.message.reply_text(
        "–°–æ–∑–¥–∞—é —Å—Å—ã–ª–∫—É...",
        reply_markup=ReplyKeyboardRemove(),
        parse_mode=ParseMode.HTML
    )
    context.bot.delete_message(
        message_id=deleted_message.message_id,
        chat_id=deleted_message.chat_id
    )
    update.message.reply_text(
        message,
        reply_markup=markup,
        parse_mode=ParseMode.HTML
    )


def write_appeal_to_admin(
        update: Update,
        context: CallbackContext,
        telegram_admin_id: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –ø–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∞–¥–º–∏–Ω—É.
    """
    if not update.callback_query:
        chat_id = update.message.from_user.id
        username = update.message.from_user.username
    else:
        chat_id = update.callback_query.message.chat_id
        username = update.callback_query.message.chat.username

    if not context.user_data.get("phone_number"):
        context.user_data["phone_number"] = get_user_phone_from_db(chat_id)

    user_appeal_message = dedent(f"""\
        --------------------
        –î–∞—Ç–∞ –∏ –í—Ä–µ–º—è: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}
        chat id: {chat_id}
        username: {username}
        phone: {context.user_data.get("phone_number")}
        –¢–µ–º–∞:  {context.user_data.get("mail_theme")}
        –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {context.user_data.get("problem_description")}
        ---------------------
        """).replace("  ", "")
    context.bot.send_message(
        chat_id=telegram_admin_id,
        text=user_appeal_message
    )

    greeting_msg = dedent("""\
       –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!
       –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –æ–ø—Ü–∏—é.
       """).replace("  ", "")

    keyboard_buttons = ["‚û°Ô∏è –í–æ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç", "üìß –ù–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º"]
    message_keyboard = list(chunked(keyboard_buttons, 1))
    markup = ReplyKeyboardMarkup(
        message_keyboard,
        resize_keyboard=True,
    )
    context.bot.send_message(
        text=greeting_msg,
        chat_id=chat_id,
        reply_markup=markup
    )
